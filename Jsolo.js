$(function() {
	$("#start").html("Go!"); // устанавливает или возвращает содержимое выбранных элементов (включая разметку HTML).
	console.log("ready!");
	var val = $("a").attr("href");
	alert(val);

	$("a:first").attr("href", "http://www.jquery.com"); // устанавливает или возвращает значение атрибутов.
	var val2 = $("p").text();
	alert(val2);
	$("#change").text("New text"); // устанавливает или возвращает текстовое содержимое выбранных элементов.
	alert($("#name").val()); // устанавливает или возвращает значение полей формы.
	$("a:first").removeAttr("href"); // удаляет указанный атрибут.
	$("#demo").append("Nikolai!"); // вставляет содержимое в конец выбранных элементов.
	$("#demo").prepend("<b>Very</b> "); // вставляет содержимое в начало выбранных элементов.
	$("#demo2").before("<i>Some Title</i>").after("<b>Welcome</b>");
	// Вставляет содержимое ДО и ПОСЛЕ выбранных элементов! С применением "Цепочки"
	var txt = $("<p></p>").text("Dobavim text");
	var txt2 = $("<div></Div>").html("<b>Жирный</b>");
	$("#demo").after(txt, txt2); // Пример сразу двух аргументов.
	$("#demo").clone().appendTo("#demo2"); // копировать элемент №демо и вставить в конец элемента №демо2.
	
	// Далее упражнения с CSS
	$("#css").addClass("header spec"); // Метод addClass () добавляет один или несколько классов к выбранным элементам
	/*классы внутри функции перечисляются через пробел!*/
	
	$("div:first").removeClass("header"); // Удаление класса 'header' из первого элемента 'див'
	$("#css").removeClass("spec"); // Удаление класса 'spec' из элемента с идентификатором 'css'
	$("button:first").click(function() {
		$("p").toggleClass("green"); // Метод toggleClass () переключает между добавлением/удалением классов из выбранных элементов
	});

	alert($("h2").css("background-color")); // Объявляем значение стиля фона в заголовке.
	$("h2").css("background-color", "blue"); // Меняем в заголовке цвет фона на синий.
	/* Подобно методу 'html ()', метод 'css ()' может использоваться для получения и установки значений свойств CSS.*/
	$("#json_style").css({"color":"red","font-size":"200%","text-shadow":"2px 3px 3px black"});
	// Чтобы установить несколько свойств CSS, метод css () использует синтаксис JSON
	
	$("div:eq(4)").css({"background-color":"cyan","width":"150","height":"150","box-shadow":"3px 4px 5px 5px purple"});
	// Установил цвет фона, ширину и высоту четвертого контейнера. А так же тень.
	$("div:eq(4)").text("В кубе").css("text-align", "center"); // Туда же вставил текст и установил по центру.
	var e = $("p").parent(); // Метод parent () возвращает прямой родительский элемент выбранного элемента.
	e.css("border", "2px solid red"); // Все прямые родители параграфов приобретают красную границу.
	var e2 = $("h3").parentsUntil("div"); // Выбрал всех родителей "Н3" до элемента "див".
	e2.css("border", "3px dotted black"); // присвоил им точечную границу.
	
	$("em").on("click mouseenter mouseleave", function() { // два события передаются в качестве первого аргумента метода on () . Второй аргумент - это функция-обработчик.
		$("em").eq(0).toggleClass("font"); // Вкл/выкл CSS класса, первого курсивного элемента.
	});
	
	$("em").eq(1).remove(); // Удалил второй элемент курсива.
	
	$("#push").click(function() {
		$("#push").clone().text("Жми еще!").insertAfter("#push").fadeTo(1000, 0.3); // При нажатии кнопка копируется и вставляется вперед, и за секунду становится прозрачной.
		$("em").trigger("click"); // и вкличается триггер на элемент "ем" запускающий функцию "клик"
	}); 
	
	$("#push").dblclick(function() {
		$("#push").css({"backgroundColor":"red"}).text("Stop!"); // При двойном клике кнопка окрашивается в красный.
		$("#push").off("click dblclick"); // и все останавливается.
		$(this).siblings("#push").remove(); // удаляются все клоны.
	}); 
	
	$("#key").keydown(function() {
		$("#msg").html($("#key").val());
	}); // обрабатывает событие нажатия клавиши для элемента с id = "key" и присваивает содержимому div с id = "msg" значение поля ввода.
	
	$("a:eq(1)").click(function(event) { // вызов обработчика событий "клик" на вторую ссылку документа.
		alert(event.pageX); // объявляет значение расстояния клика от начала ссылки.
		event.preventDefault(); // предотвращает действие события, то есть переход по ссылке.
	});
	
	$("#add").on("click", function() {
		var val3 = $("input:last").val(); // принимает значение поля ввода, присваивает его переменной val3 .
		if(val3 !== '') {  // Оператор if проверяет, не является ли значение пустым,
			var elem = $("<li></li>").text(val3); // а затем создает новый элемент <li>.
			$(elem).append("<button class='rem'>X</button>"); // Добавляется кнопка для его удаления
			$("#myList").append(elem); // после чего вновь созданный элемент добавляется в список <ol id = "mylist">
			$("input:last").val(""); // очищаем ввод.
			$(".rem").on("click", function() { // Вызываем событие "клик" на кнопку с классом "рем"
				$(this).parent().remove(); // Удаляем родителя конкретно этой кнопки, с ней же, как дочерним элементом. 
			});
		}
	});
	// Анимация.
	$("p:last").click(function() { // при нажатии мышкой на последний параграф..
		$("div:eq(4)").toggle(1000); // четвертый контейнер появляется/исчезает за одну секунду.
		$("div:eq(5)").slideToggle(2000); // пятый контейнер делает это с эффектом слайда и за две секунды.
	});
	
	$("div:eq(7)").click(function() {
		$("div:eq(7)").animate({"width":"250","height":"100px"}, 1000);
	});
	$("div:eq(7)").dblclick(function() {
		$("div:eq(7)").animate({"width":"+=750","height":"-=80px"}, 500);
	});
	
	$("#item").click(function() {
		$("#submenu").slideToggle(500);
	});
	
});
